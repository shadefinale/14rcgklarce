var combSort = function(input){
  // We have a gap, and a shrink factor to reduce the size of this gap.
  var gap = input.length,
      shrink = 1.3,
      swapped = false;

  // Once the gap is 1, we're doing a bubble sort.
  // With a bubble sort, if we didn't swap anything, the array is sorted.
  while (!(gap == 1 && !swapped)){
    // Shrink the gap by the given shrink factor.
    gap = parseInt(gap / shrink);
    if (gap < 1) gap = 1;

    // i, and lower down, tmp, should be local to their loops.
    var i = 0;
    swapped = false;

    // Compare values that are 'gap' distance apart, switching if necessary.
    // If we do switch something, set the 'swapped' flag to true.
    while (i + gap <= input.length){
      if (input[i] > input[i+gap]){
        var tmp = input[i];
        input[i] = input[i+gap];
        input[i+gap] = tmp;
        swapped = true;
      }
      // Increment i so we don't get stuck in an infinite loop.
      i++;
    }
  }

  // This is an in-place sorting. Return the original array.
  return input;
};

/*
  TESTS BELOW
*/

// Simple function to help test above sorting function.
var isSorted = function(input){
  for (var i = 0; i < input.length - 1; i++){
    if (input[i] > input[i+1]) return false;
  }
  return true;
}

// Quickly test our testing function.
var notSorted = [1,2,3,5,4],
    sorted = [1,2,3,4,5];

console.log(isSorted(notSorted));
console.log(isSorted(sorted));

// Arrays generated by random.org
var a1 = [274, 187, 182, 289, 225, 64, 288, 72, 86, 116, 83, 198, 25, 44, 243, 219, 12, 121, 125, 190, 1, 141, 124, 235, 16],
    a2 = [155, 84, 17, 282, 294, 250, 1, 74, 298, 10, 55, 247, 108, 176, 85, 81, 285, 117, 229, 277, 219, 287, 271, 4, 221],
    a3 = [199, 93, 96, 124, 218, 60, 128, 231, 122, 209, 215, 273, 292, 87, 243, 39, 206, 76, 302, 132, 269, 242, 21, 172, 8],
    a4 = [211, 219, 175, 172, 7, 76, 244, 64, 83, 22, 294, 194, 229, 221, 218, 62, 193, 129, 58, 11, 39, 14, 210, 26, 43],
    a5 = [134, 296, 246, 200, 30, 70, 189, 107, 8, 103, 6, 9, 135, 53, 241, 170, 14, 29, 294, 113, 174, 117, 173, 216, 152];

console.log(combSort(a1));
console.log(isSorted(a1));

console.log(combSort(a2));
console.log(isSorted(a2));

console.log(combSort(a3));
console.log(isSorted(a3));

console.log(combSort(a4));
console.log(isSorted(a4));

console.log(combSort(a5));
console.log(isSorted(a5));

